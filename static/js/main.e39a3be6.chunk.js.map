{"version":3,"sources":["Components/Hero/Hero.js","Redux/Actions/actionTypes.js","Redux/Actions/albumsActions.js","Components/NavBar/NavBar.js","Components/SeachBar/SearchBar.js","Components/Header/Header.js","Components/SideBar/SideBar.js","Components/Content/Content.js","Components/Box/Box.js","Redux/Actions/artistsActions.js","Components/Loading.js","Components/Artists/Artists.js","Components/Albums/Albums.js","Redux/Actions/tracksActions.js","Components/context-track.js","Components/TrackCard/TrackCard.js","Components/Tracks/Tracks.js","Components/drums-context.js","Components/Drums/DrumButtons/DrumButton.js","Components/Drums/drumbtnkeys.js","Components/Drums/Drums/Drums.js","Components/Drums/DrumTools/DrumText/DrumText.js","Components/Drums/DrumTools/DrumSwitch/DrumSwitch.js","Components/Drums/DrumTools/DrumVolume/DrumVolume.js","Components/Drums/DrumContainer/DrumContainer.js","Components/Main.js","Redux/Actions/authActions.js","App.js","serviceWorker.js","Redux/Reducers/artistReducer.js","Redux/Reducers/authReducer.js","Redux/Reducers/SearchReducer.js","Redux/Reducers/albumReducer.js","Redux/Reducers/tracksReducer.js","Redux/Reducers/rootReducer.js","index.js"],"names":["Hero","className","to","src","SEARCHING","AlbumsError","errmsg","type","payload","FetchAlbumsAll","token","dispatch","axios","get","headers","then","data","AlbumsShow","albums","items","catch","err","Albums","searchAlbum","query","actionTypes","NavBar","useDispatch","class","onClick","SearchBar","textChange","placeHolder","placeholder","onChange","e","target","value","Header","isDrums","style","color","textShadow","SideBar","actorInfo","img","name","generes","followers","popularity","Content","props","drums","children","Box","actorId","albumId","subtitle","Card","CardImg","top","width","CardBody","CardTitle","CardSubtitle","ArtistsShow","Artists","searchingArtist","Loading","margin","Artist","useSelector","state","authReducer","artistsData","artistReducer","artistSearch","SearchReducer","useState","setActorInfo","useEffect","artists","FetchArtists","updateInfo","item","genres","total","images","length","url","searchArtist","Container","Row","loading","activeSearch","searchResult","map","Col","xs","size","onMouseOver","key","id","params","useParams","albumsData","albumReducer","albumsSearch","FetchAlbums","artist","find","savedArtists","isSearching","release_date","TracksError","TracksShow","Tracks","searchTrack","console","log","tracks","TrackContext","React","createContext","playingID","changePlayingID","memo","artistName","time","trackPreview","trackID","play","setPlayTrack","setPauseTrack","Audio","audio","history","useHistory","trackCon","useContext","pause","str","sepeatorIndex","split","indexOf","slice","join","truncateString","s","secs","mins","msToTime","display","TracksData","trackReducer","trackSearch","setPlayingID","FetchTracks","FetchTracksAll","id2","Provider","preview_url","duration_ms","DrumContext","btnName","changeName","DrumButton","keyBtn","activeBtn","sound","forceUpdate","volume","active","setActive","drumContext","setTimeout","Dbtns","keybtn","sound1","sound2","Drums","currentVolume","drumBtns","setDrumsBtns","setActiveBtn","handlePress","window","addEventListener","removeEventListener","index","DrumText","drumData","DrumSwitch","FormGroup","CustomInput","label","DrumVolume","getVolumeRange","DrumsContainer","setCurrentVolume","setBtnName","val","Auth","location","assign","Main","path","component","exact","DrumContainer","fetchToken","App","accessToken","search","hash","substring","JSON","parse","replace","decodeURIComponent","parseURLHash","access_token","authActions","Boolean","hostname","match","action","filterdSearch","preview_url_Exsist","some","filter","filterdTracks","rootReducer","combineReducers","ReactDOM","render","StrictMode","store","createStore","applyMiddleware","thunk","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e39a3be6.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Hero.scss'\r\nimport {Link} from 'react-router-dom'\r\nconst Hero=()=>{\r\n    return(\r\n        <div className=\"hero_container\">\r\n           <div className=\"content\">\r\n\r\n               <div >\r\n                  <p>Music App For Playing Songs , For Every One</p>\r\n                   <Link className=\"link\"  to=\"/Artists\"> <i className=\"fa fa-arrow-right\"></i> Kick Off</Link>     \r\n               </div>\r\n\r\n               <div>\r\n                   <figure>\r\n                       <img src=\"../../images/ketty2.jpg\"/>\r\n                   </figure>\r\n                   <figure>\r\n                       <img src=\"../../images/selena.jpg\"/>\r\n                   </figure>\r\n                   <figure>\r\n                       <img src=\"../../images/taylor.jpg\"/>\r\n                   </figure>\r\n               </div>\r\n           </div>\r\n           <div className=\"image\">\r\n              <figure>\r\n                  <img src=\"../../images/background.jpeg\"/>\r\n              </figure>\r\n               \r\n               </div>\r\n           <div className=\"footer\">\r\n               <p>FIND YOUE PERFECT MUSIC</p>\r\n           </div>\r\n           <div className=\"space\">section4</div>\r\n        \r\n        </div>\r\n    )\r\n}\r\nexport default Hero","\r\nexport const FETCH_TOKEN='FETCH_TOKEN'\r\nexport const SEARCHING='ARTIST_SEARCHING'\r\nexport const SEARCHING_RESULT='ARTIST_SEARCHING_RESULT'\r\nexport const DISACTIVATING_SEARCH='DISACTIVATING_SEARCH'\r\n\r\nexport const FETCH_ARTISTS='FETCH_ARTISTS'\r\nexport const ARTISTS_ERROR='ARTISTS_ERROR'\r\nexport const ARTISTS_LOADING='ARTISTS_LOADING'\r\nexport const ARTISTS_SHOW='ARTISTS_SHOW'\r\nexport const SEARCH_ARTISTS='SEARCH_ARTISTS'\r\nexport const SEARCHING_RESULT_ARTIST='SEARCHING_RESULT_ARTIST'\r\n\r\n\r\n\r\n\r\nexport const FETCH_ALBUMS='FETCH_ALBUMS'\r\nexport const ALBUMS_ERROR='ALBUMS_ERROR'\r\nexport const ALBUMS_LOADING='ALBUMS_LOADING'\r\nexport const ALBUMS_SHOW='ALBUMS_SHOW'\r\nexport const SEARCH_ALBUMS='SEARCH_ALBUMS'\r\nexport const FETCH_ALBUMS_ALL='FETCH_ALBUMS_ALL'\r\n\r\n\r\n\r\n\r\n\r\nexport const FETCH_TRACKS='FETCH_TRACKS'\r\nexport const TRACKS_ERROR='TRACKS_ERROR'\r\nexport const TRACKS_LOADING='TRACKS_LOADING'\r\nexport const TRACKS_SHOW='TRACKS_SHOW'\r\nexport const SEARCH_TRACKS='SEARCH_TRACKS'\r\nexport const FETCH_TRACKS_ALL='FETCH_TRACKS_ALL'\r\n\r\n\r\n\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\n\r\n/*********************Loading Albums*************************** */\r\nexport const AlbumsLoading=()=>({\r\n    type:actionTypes.ALBUMS_LOADING\r\n})\r\n\r\nexport const AlbumsError=(errmsg)=>({\r\n    type:actionTypes.ALBUMS_ERROR,\r\n    payload:errmsg\r\n})\r\n\r\n\r\nexport const FetchAlbums=(token,actorId)=>dispatch=>{\r\n\r\n    dispatch(AlbumsLoading())\r\n    axios.get(`https://api.spotify.com/v1/artists/${actorId}/albums?offset=0&include_groups=album,single,compilation,appears_on&market=ES`,{\r\n\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n    })\r\n    .then(data=>dispatch(AlbumsShow(data.data.items))).catch(err=> dispatch( AlbumsError(err)))\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const FetchAlbumsAll=(token)=>dispatch=>{\r\n    \r\n        dispatch(AlbumsLoading())\r\n    \r\n       \r\n        axios.get(`https://api.spotify.com/v1/search?q=a&type=album&market=US`,{\r\n    \r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n        })\r\n        .then(data=>dispatch(AlbumsShow(data.data.albums.items))).catch(err=> dispatch( AlbumsError(err)))\r\n    \r\n    }\r\n    \r\n\r\n\r\nexport const AlbumsShow=(Albums)=>({\r\n    type:actionTypes.ALBUMS_SHOW,\r\n    payload:Albums\r\n})\r\n\r\n\r\n/************************************************************************************** */\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const searchingALbums=()=>({\r\n    type:actionTypes.SEARCHING\r\n})\r\n\r\nexport const disactivatingSearch=()=>({\r\n    type:actionTypes.DISACTIVATING_SEARCH\r\n})\r\n\r\nexport const searchALbumResult=(album)=>({\r\n    type:actionTypes.SEARCHING_RESULT,\r\n    payload:album\r\n})\r\n\r\n\r\nexport const searchAlbum=(token,query)=>dispatch=>{\r\n    dispatch(searchingALbums())\r\n    axios.get(`https://api.spotify.com/v1/search?q=${query}&type=album&market=US`,{\r\n\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n    })\r\n    .then(data=>dispatch(searchALbumResult(data.data.albums.items)))\r\n     \r\n\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './NavBar.scss'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {useDispatch} from 'react-redux'\r\nimport {FetchAlbumsAll} from '../../Redux/Actions/albumsActions'\r\nconst NavBar=()=>{\r\n  const dispatch=useDispatch()\r\n    return(\r\n          <div className=\"navbar\">\r\n\r\n          <div className=\"ft-container\">\r\n             <p>Features</p>\r\n          </div>\r\n\r\n          <ul className=\"nav-container\">\r\n            <li><i class=\"fa fa-gamepad fa-2x\" ></i><Link className=\"link\" to=\"/Drums\">Enjoy</Link></li>     \r\n            <li> <i class=\"fa fa-microphone fa-2x\"></i><Link className=\"link\"  to=\"/Artists\">Artists</Link></li>\r\n            <li> <i class=\"fa fa-image fa-2x\"></i><Link className=\"link\"  onClick={()=>dispatch(FetchAlbumsAll())}  to=\"/Albums\">Albums</Link></li>\r\n            <li><i class=\"fa fa-music fa-2x\"></i><Link className=\"link\" to=\"/Tracks\">Tracks</Link></li>\r\n          </ul>\r\n          </div>\r\n    )\r\n}\r\nexport default NavBar","\r\nimport React from 'react'\r\nimport './SearchBar.scss'\r\nconst SearchBar=({textChange,placeHolder})=>{\r\n  \r\n    return(\r\n         <div className=\"searchBar\">\r\n            <input type=\"text\" placeholder={placeHolder} onChange={(e)=>textChange(e.target.value)}/>\r\n            <i class=\"fa fa-search search-icon\" ></i>\r\n         </div>\r\n    )\r\n}\r\nexport default SearchBar","import React from 'react'\r\nimport './Header.scss'\r\nimport SearchBar from '../SeachBar/SearchBar'\r\nconst Header =({textChange,placeHolder,isDrums})=>{\r\n\r\n    \r\n    return(\r\n        <div className=\"header\"> \r\n         {!isDrums&&<SearchBar textChange={textChange} placeHolder={placeHolder}/>} \r\n          <i class=\"fa fa-music fa-3x\" style={{color:'#222C56',textShadow:'2px 2px 2px  #222C56'}}></i>\r\n        </div>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\nimport './SideBar.scss'\r\nconst SideBar=({actorInfo})=>{\r\n  \r\n    return(\r\n      \r\n        <div className=\"sideBarContainer\">\r\n            {\r\n                actorInfo.img==\"\"?<></>:\r\n            <div>\r\n              <div className=\"actor_info\">\r\n\r\n                   <div className=\"actor_info__img\">\r\n                       <figure>\r\n                           <img src={actorInfo.img}/>\r\n                       </figure>\r\n                   </div>\r\n\r\n            \r\n\r\n                   <div className=\"actor_info__name\">\r\n                         <p>{actorInfo.name}</p>\r\n                   </div>\r\n\r\n                   <div className=\"actor_info__subtitle\">\r\n                          <p>{actorInfo.generes}</p>\r\n                   </div>\r\n              </div>\r\n\r\n              <div className=\"number_group\">\r\n\r\n             \r\n              <div className=\"actor_followers\">\r\n                 <p>Followers &nbsp; <span>{actorInfo.followers}</span></p>\r\n              </div>\r\n\r\n              <div className=\"actor_popularity\">\r\n               <p>Popularity &nbsp; <span>{actorInfo.popularity}</span></p>\r\n              </div>\r\n\r\n              </div>\r\n              </div>\r\n}\r\n        </div>\r\n    )\r\n}\r\nexport default SideBar","import React from 'react'\r\nimport './Content.scss'\r\nconst Content=(props)=>{\r\n    return(\r\n        <div className= {props.drums?\" contentContainer drums\":\"contentContainer\"}>\r\n                {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Content","import React from 'react'\r\nimport {Card,CardImg,CardBody,CardTitle,CardSubtitle} from 'reactstrap'\r\nimport './Box.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Box=({actorId,albumId,img,name,subtitle})=>{\r\n\r\n  \r\nreturn (\r\n    <Card className=\"box\">\r\n        <Link to={albumId!=null?`/${albumId}/${actorId}/Tracks`:`/${actorId}/Albums`}>\r\n       <CardImg  top width=\"100%\" src={img} className=\"box__image\"/>\r\n       <CardBody className=\"box__body\">\r\n           <CardTitle className=\"box__body--title\" > {name} </CardTitle>\r\n           <CardSubtitle className=\"box__body--subtitle\"  >{subtitle}</CardSubtitle>\r\n       </CardBody>\r\n       </Link>\r\n    </Card>\r\n)\r\n}\r\nexport default Box","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\n\r\n/*********************Loading Artists*************************** */\r\nexport const ArtistsLoading=()=>({\r\n    type:actionTypes.ARTISTS_LOADING\r\n})\r\n\r\nexport const ArtistsError=(errmsg)=>({\r\n    type:actionTypes.ARTISTS_ERROR,\r\n    payload:errmsg\r\n})\r\n\r\n\r\nexport const FetchArtists=(token)=>dispatch=>{\r\n\r\n    dispatch(ArtistsLoading())\r\n    axios.get('https://api.spotify.com/v1/search?q=year%3A2001&type=artist&market=US&limit=50'\r\n\r\n    ,{\r\n\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n    })\r\n    .then(data=>dispatch(ArtistsShow(data.data.artists.items))).catch(err=> dispatch( ArtistsError(err)))\r\n\r\n}\r\n\r\n\r\nexport const ArtistsShow=(Artists)=>({\r\n    type:actionTypes.ARTISTS_SHOW,\r\n    payload:Artists\r\n})\r\n\r\n\r\n/************************************************************************************** */\r\n\r\n\r\n\r\n\r\n/*******Searching for Artists*************** */\r\n\r\nexport const searchingArtist=()=>({\r\n    type:actionTypes.SEARCHING\r\n})\r\n\r\nexport const disactivatingSearch=()=>({\r\n    type:actionTypes.DISACTIVATING_SEARCH\r\n})\r\n\r\nexport const searchArtistResult=(artist)=>({\r\n    type:actionTypes.SEARCHING_RESULT_ARTIST,\r\n    payload:artist\r\n})\r\n\r\n\r\nexport const searchArtist=(token,query)=>dispatch=>{\r\n    dispatch(searchingArtist)\r\n    axios.get(`https://api.spotify.com/v1/search?q=${query}&type=artist&market=US`,{\r\n\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n    })\r\n    .then(data=>dispatch(searchArtistResult(data.data.artists.items)))\r\n\r\n}\r\n\r\n/************************************************************************** */\r\n\r\n","import React from 'react'\r\nconst Loading=()=>{\r\n\r\n    return(\r\n        <div  style={{width:'20%',margin:'auto'}}>\r\n            <i class=\"fa fa-spinner fa-spin fa-3x\"></i>\r\n        </div>\r\n    )\r\n}\r\nexport default Loading","import React, { useEffect,useState } from 'react'\r\nimport NavBar from '../NavBar/NavBar'\r\nimport './Artists.scss'\r\nimport Header from '../Header/Header'\r\nimport SideBar from '../SideBar/SideBar'\r\nimport Content from '../Content/Content'\r\nimport Box from '../Box/Box'\r\nimport {Container,Col,Row} from 'reactstrap'\r\nimport axios from 'axios'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {FetchArtists,searchArtist,disactivatingSearch} from '../../Redux/Actions/artistsActions'\r\nimport Loading from '../Loading'\r\n\r\nconst Artist=()=>{\r\n\r\n  const dispatch=useDispatch()\r\n  const token=useSelector(state=>state.authReducer.token)\r\n  const artistsData=useSelector(state=>state.artistReducer)\r\n  const artistSearch=useSelector(state=>state.SearchReducer)\r\n  \r\nconst [actorInfo,setActorInfo]=useState({name:'',generes:'',popularity:'',followers:'',img:''})\r\n\r\n  useEffect(()=>{\r\n      \r\n        dispatch(disactivatingSearch())   \r\n        dispatch(FetchArtists(token))\r\n\r\n  },[])\r\n\r\n\r\n\r\n\r\n  const updateInfo=(item)=>{     \r\n    setActorInfo(\r\n        {\r\n        name:item.name,\r\n        generes:item.genres[0],\r\n        popularity:item.popularity,\r\n        followers:item.followers.total,\r\n        img: (item.images.length==0)?'../images/anonymous-person-221117.jpg':item.images[1].url\r\n    })\r\n    \r\n  }\r\n  const textChange=(query)=>{\r\n      \r\n      if(query==\"\"){\r\n          dispatch(disactivatingSearch())\r\n      }\r\n      else{ dispatch(searchArtist(token,query))}\r\n  }\r\n\r\n    return(\r\n\r\n      \r\n        <div className=\"artistContainer\">\r\n            <NavBar/>\r\n            <Header textChange={textChange} placeHolder=\"Searhing for Artists\"/>\r\n            <Content>\r\n                <Container className=\"mt-5\" >\r\n                    <Row>\r\n\r\n                     {\r\n\r\n                         (artistsData.loading||artistSearch.loading)?<Loading/>:\r\n                         (artistSearch.activeSearch)?\r\n\r\n                          artistSearch.searchResult.map(item=>(\r\n                           \r\n                            <Col xs={{size:3}} className=\"mb-2\" onMouseOver={()=>updateInfo(item)} key={item.id} >\r\n                            <Box img={(item.images.length==0)?'../images/anonymous-person-221117.jpg':item.images[0].url} \r\n                            \r\n                             name={item.name}\r\n                             subtitle={item.genres[0]}\r\n                             actorId={item.id}\r\n                             \r\n                             />\r\n                          \r\n                         </Col>\r\n                         )):\r\n\r\n                          artistsData.artists.map(item=>(\r\n                           \r\n                            <Col xs={{size:3}} className=\"mb-2\" onMouseOver={()=>updateInfo(item)} key={item.id} >\r\n                            <Box img={(item.images.length==0)?'../images/anonymous-person-221117.jpg':item.images[1].url} \r\n                            name={item.name}\r\n                            subtitle={item.genres[0]}\r\n                            actorId={item.id}\r\n\r\n                              />\r\n                          \r\n                         </Col>\r\n                         ))\r\n\r\n\r\n                     }\r\n\r\n                     \r\n                   \r\n\r\n\r\n                    </Row>\r\n                </Container>\r\n            \r\n\r\n             </Content>   \r\n            <SideBar actorInfo={actorInfo}/>\r\n           \r\n        </div>\r\n    )\r\n}\r\nexport default Artist","import React, { useEffect,useState } from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport Header from '../Header/Header'\r\nimport SideBar from '../SideBar/SideBar'\r\nimport Content from '../Content/Content'\r\nimport NavBar from '../NavBar/NavBar'\r\nimport '../Albums/Albums.scss'\r\nimport {Container,Col,Row} from 'reactstrap'\r\nimport Loading from '../Loading'\r\nimport Box from '../Box/Box'\r\nimport {FetchAlbums,searchAlbum,disactivatingSearch,FetchAlbumsAll} from '../../Redux/Actions/albumsActions'\r\n\r\nconst Albums=(props)=>{\r\n\r\n    const params=useParams()\r\n    const dispatch=useDispatch()\r\n    const token=useSelector(state=>state.authReducer.token)\r\n    const artistsData=useSelector(state=>state.artistReducer)\r\n    const artistSearch=useSelector(state=>state.SearchReducer)\r\n    const albumsData=useSelector(state=>state.albumReducer)\r\n    const albumsSearch=useSelector(state=>state.SearchReducer)\r\n    const [actorInfo,setActorInfo]=useState({name:'',generes:'',popularity:'',followers:'',img:''})\r\n\r\n\r\n   useEffect(()=>{\r\n          dispatch(disactivatingSearch())\r\n          if(params.id) dispatch(FetchAlbums(token,params.id))\r\n          else dispatch(FetchAlbumsAll(token))\r\n\r\n           \r\n         \r\n   },[])\r\n\r\n   \r\n\r\n    useEffect(()=>{\r\n\r\n       \r\n        let artist=artistsData.artists.find(item=>item.id===params.id)\r\n        if(artist==null)\r\n          artist=artistSearch.savedArtists.find(item=>item.id===params.id)\r\n        \r\n        \r\n        if(artist!=null)\r\n        setActorInfo({\r\n            name:artist.name,\r\n            generes:artist.genres[0],\r\n            popularity:artist.popularity,\r\n            followers:artist.followers.total,\r\n            img:artist.images[0].url})\r\n\r\n    },[albumsData])\r\n\r\n  \r\n    const textChange=(query)=>{\r\n      \r\n        if(query==\"\"){\r\n            dispatch(disactivatingSearch())\r\n        }\r\n        else{dispatch(searchAlbum(token,query))}\r\n    }\r\n  \r\n\r\n    return(\r\n        <div className=\"AlbumsContainer\">\r\n           \r\n           <NavBar/>\r\n            <Header  textChange={textChange} placeHolder=\"Searhing for Albums\" />\r\n            <Content>\r\n       <Container className='mt-5'>\r\n               <Row>\r\n\r\n                     {\r\n\r\n                         (albumsData.loading||albumsSearch.isSearching)?<Loading/>:\r\n                         (albumsSearch.activeSearch)?\r\n\r\n                          albumsSearch.searchResult.map(item=>(\r\n                           \r\n                            <Col xs={{size:3}} className=\"mb-2\"  key={item.id} >\r\n                            <Box img={(item.images.length==0)?'../../images/anonymous-person-221117.jpg':item.images[0].url} \r\n                            name={item.name}\r\n                            subtitle={item.release_date}\r\n                            albumId={item.id}\r\n                            actorId={params.id}\r\n\r\n                              />\r\n                          \r\n                         </Col>\r\n                         )):              \r\n\r\n                          albumsData.Albums.map(item=>(\r\n                           \r\n                            <Col xs={{size:3}} className=\"mb-2\"  key={item.id} >\r\n                            <Box img={(item.images.length==0)?'../../images/anonymous-person-221117.jpg':item.images[0].url} \r\n                            name={item.name}\r\n                            subtitle={item.release_date}\r\n                            albumId={item.id}\r\n                            actorId={params.id}\r\n\r\n\r\n                              />\r\n                          \r\n                         </Col>\r\n                         ))\r\n\r\n\r\n                     }\r\n\r\n\r\n                    </Row>\r\n                    </Container>\r\n            </Content>\r\n            \r\n\r\n            <SideBar actorInfo={actorInfo}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Albums","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\n\r\n/*********************Loading Tracks*************************** */\r\nexport const TracksLoading=()=>({\r\n    type:actionTypes.TRACKS_LOADING\r\n})\r\n\r\nexport const TracksError=(errmsg)=>({\r\n    type:actionTypes.TRACKS_ERROR,\r\n    payload:errmsg\r\n})\r\n\r\n\r\nexport const FetchTracks=(token,albumId)=>dispatch=>{\r\n\r\n    dispatch(TracksLoading())\r\n\r\n  \r\n    axios.get(`https://api.spotify.com/v1/albums/${albumId}/tracks`,{\r\n\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n    })\r\n    .then(data=>dispatch(TracksShow(data.data.items))).catch(err=>dispatch(TracksError(err)))\r\n\r\n      \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const FetchTracksAll=(token)=>dispatch=>{\r\n    \r\n        dispatch(TracksLoading())\r\n    \r\n       \r\n        axios.get(`https://api.spotify.com/v1/search?q=a&type=track&market=US`,{\r\n    \r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n        })\r\n        .then(data=>dispatch(TracksShow(data.data.tracks.items))).catch(err=> dispatch( TracksError(err)))\r\n    \r\n    }\r\n    \r\n\r\n\r\nexport const TracksShow=(Tracks)=>({\r\n    type:actionTypes.TRACKS_SHOW,\r\n    payload:Tracks\r\n})\r\n\r\n\r\n/************************************************************************************** */\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const searchingTracks=()=>({\r\n    type:actionTypes.SEARCHING\r\n})\r\n\r\nexport const disactivatingSearch=()=>({\r\n    type:actionTypes.DISACTIVATING_SEARCH\r\n})\r\n\r\nexport const searchTrackResult=(track)=>({\r\n    type:actionTypes.SEARCHING_RESULT,\r\n    payload:track\r\n})\r\n\r\n\r\nexport const searchTrack=(token,query)=>dispatch=>{\r\n    console.log(token)\r\n    dispatch(searchingTracks())\r\n    axios.get(`https://api.spotify.com/v1/search?q=${query}&type=track&market=US`,{\r\n\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token\r\n        },\r\n    })\r\n    .then(data=>dispatch(searchTrackResult(data.data.tracks.items)))\r\n     \r\n\r\n}\r\n\r\n\r\n","import React from 'react'\r\nconst TrackContext =React.createContext({playingID:null,changePlayingID:()=>{}})\r\nexport default TrackContext","\r\nimport React,{useState,useEffect,useContext} from 'react'\r\n\r\nimport  './TrackCard.scss'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport TrackContext from '../context-track'\r\nconst TrackCard=({img,name,artistName,time,trackPreview,trackID})=>{\r\n\r\n  \r\nconst [play,setPlayTrack]=useState(false)\r\nconst [pause,setPauseTrack]=useState(true)\r\nconst [audio,setAudio]=useState(new Audio(trackPreview))\r\nconst history=useHistory()\r\n\r\n\r\n\r\n const trackCon=useContext(TrackContext)\r\n\r\n    function msToTime(s) {\r\n        var ms = s % 1000;\r\n        s = (s - ms) / 1000;\r\n        var secs = s % 60;\r\n        s = (s - secs) / 60;\r\n        var mins = s % 60;\r\n        var hrs = (s - mins) / 60;\r\n      \r\n        return  mins + ':' + secs;\r\n      }\r\n     \r\n\r\n         \r\n\r\n   const playTrack=()=>{\r\n    \r\n   \r\n    trackCon.changePlayingID(trackID)\r\n    \r\n      \r\n    \r\n   }\r\n\r\n   const pauseTrack=()=>{\r\n    \r\n    trackCon.changePlayingID(null)\r\n    \r\n}\r\n\r\nconst truncateString=(str)=>{\r\n    let sepeatorIndex=str.split('').indexOf('-')\r\n    return  sepeatorIndex==-1?str:str.split('').slice(0,sepeatorIndex).join('')\r\n\r\n}\r\n\r\nuseEffect(()=>{\r\n\r\n    console.log('repeated')\r\n})\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n    return ()=>{\r\n        setPauseTrack(true)\r\n        setPlayTrack(false)\r\n        audio.pause()\r\n        trackCon.changePlayingID(null)\r\n    }\r\n},[history])\r\n\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n\r\n if(trackID==trackCon.playingID)\r\n {\r\n     \r\n    setPauseTrack(false)\r\n    setPlayTrack(true)      \r\n   \r\n   \r\n    audio.play();\r\n }\r\n\r\n\r\n \r\n\r\n     if(trackID!=trackCon.playingID)\r\n    {\r\n        \r\n        setPauseTrack(true)\r\n        setPlayTrack(false)\r\n        audio.pause()\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n},[trackCon])\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"TrackCard\">\r\n           \r\n              <figure className=\"TrackCard__img\">\r\n                      <img src={img} className={play?'rotateImg':''}/>\r\n              </figure>\r\n\r\n              <div className=\"TrackCard__name\">\r\n                   <p>{ truncateString(name)}</p>\r\n              </div>\r\n\r\n              <div className=\"TrackCard__artistName\">\r\n                       <p>{artistName}</p>\r\n              </div>\r\n\r\n              <div className=\"TrackCard__time\">\r\n                       <p>{ msToTime(time)}</p>\r\n              </div>\r\n             \r\n             <div className=\"TrackCard__trackStatus\" >\r\n                   <i class=\"fa fa-play\" style={{display:play?'none':'block'}}  onClick={()=>playTrack()}> </i>\r\n                   <i class=\"fa fa-pause\" style={{display:play?'block':'none'}}  onClick={()=>pauseTrack()}></i>\r\n             </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default  React.memo(TrackCard)","import React, { useEffect,useState ,useContext} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport Header from '../Header/Header'\r\nimport SideBar from '../SideBar/SideBar'\r\nimport Content from '../Content/Content'\r\nimport NavBar from '../NavBar/NavBar'\r\nimport '../Tracks/Tracks.scss'\r\nimport {Container,Col,Row} from 'reactstrap'\r\nimport Loading from '../Loading'\r\nimport Box from '../Box/Box'\r\nimport {FetchTracks,searchTrack,disactivatingSearch,FetchTracksAll} from '../../Redux/Actions/tracksActions'\r\nimport TrackCard from '../TrackCard/TrackCard'\r\nimport TrackContext from '../context-track'\r\n\r\nconst Tracks=(props)=>{\r\n\r\n    const params=useParams()\r\n    const dispatch=useDispatch()\r\n    const token=useSelector(state=>state.authReducer.token)\r\n    const artistsData=useSelector(state=>state.artistReducer)\r\n    const artistSearch=useSelector(state=>state.SearchReducer)\r\n    const TracksData=useSelector(state=>state.trackReducer)\r\n    const trackSearch=useSelector(state=>state.SearchReducer)\r\n    const [actorInfo,setActorInfo]=useState({name:'',generes:'',popularity:'',followers:'',img:''})\r\n    const [playingID,setPlayingID]=useState(null)\r\n    const changePlayingID=(id)=>{     \r\n      setPlayingID(id)\r\n  }\r\n\r\n   useEffect(()=>{\r\n          dispatch(disactivatingSearch())\r\n          if(params.id)\r\n          {\r\n            dispatch(FetchTracks(token,params.id))\r\n         \r\n          }\r\n          else{\r\n            dispatch(FetchTracksAll(token))\r\n          }\r\n          \r\n   },[])\r\n\r\n   \r\n    useEffect(()=>{\r\n\r\n    \r\n       \r\n        let artist=artistsData.artists.find(item=>item.id===params.id2)\r\n        if(artist==null)\r\n          artist=artistSearch.savedArtists.find(item=>item.id===params.id2)\r\n         \r\n         \r\n        if(artist!=null)\r\n          \r\n        setActorInfo({\r\n            name:artist.name,\r\n            generes:artist.genres[0],\r\n            popularity:artist.popularity,\r\n            followers:artist.followers.total,\r\n            img:artist.images[0].url})\r\n            \r\n\r\n    },[artistsData,TracksData])\r\n\r\n  \r\n\r\n    const textChange=(query)=>{\r\n      \r\n        if(query==\"\"){\r\n            dispatch(disactivatingSearch())\r\n        }\r\n        else{dispatch(searchTrack(token,query))}\r\n    }\r\n    \r\n  \r\n\r\n    return(\r\n        <div className=\"TracksContainer\">\r\n           \r\n           <NavBar/>\r\n            <Header  placeHolder=\"Searhing for Tracks\" textChange={textChange} />\r\n            <Content>\r\n                <Container>\r\n                <Row >\r\n                <TrackContext.Provider value={{playingID,changePlayingID}}>\r\n                    {\r\n                 \r\n                 (TracksData.loading||trackSearch.isSearching)?<Loading/>:\r\n                 (trackSearch.activeSearch)?\r\n\r\n                 trackSearch.searchResult.map(item=>\r\n                    <Col xs={{size:12}} className=\"d-flex justify-content-center\"   key={item.id}>\r\n                      \r\n                  <TrackCard \r\n                  artistName={item.artists[0].name} \r\n                  name={item.name}\r\n                  trackPreview={item.preview_url}\r\n                  time={item.duration_ms}\r\n                  img={actorInfo.img===''?'../../images/anonymous-person-221117.jpg':actorInfo.img}\r\n                  trackID={item.id}\r\n                   />\r\n                  </Col>\r\n                  \r\n                  ):\r\n\r\n                  TracksData.Tracks.map(item=>\r\n                    <Col xs={{size:12}} className=\"d-flex justify-content-center\"   key={item.id}>\r\n                      \r\n                  <TrackCard \r\n                  artistName={item.artists[0].name} \r\n                  name={item.name}\r\n                  trackPreview={item.preview_url}\r\n                  time={item.duration_ms}\r\n                  img={(actorInfo.img==='')?'../../images/anonymous-person-221117.jpg':actorInfo.img}\r\n                  trackID={item.id}\r\n                   />\r\n                  </Col>\r\n                  )\r\n\r\n\r\n\r\n                }\r\n                    </TrackContext.Provider>\r\n              \r\n                </Row>\r\n               \r\n                </Container>\r\n            </Content>\r\n            \r\n\r\n            <SideBar actorInfo={actorInfo}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Tracks","import React from 'react'\r\nimport DrumButton from './Drums/DrumButtons/DrumButton'\r\nconst DrumContext=React.createContext({btnName:'',changeName:()=>{}})\r\nexport default DrumContext","import React, { useEffect,useState,useContext } from 'react'\r\nimport DrumContext from '../../drums-context'\r\nimport '../DrumButtons/DrumButton.scss'\r\n\r\nconst DrumButton=({keyBtn,activeBtn,sound,forceUpdate,volume,btnName})=>{\r\n  const [active,setActive]=useState(false)\r\n    const drumContext=useContext(DrumContext)\r\nuseEffect(()=>{\r\n \r\n if(keyBtn==activeBtn)\r\n {\r\n     setActive(true)\r\n    if(sound!='')\r\n    {\r\n\r\n        drumContext.changeName(btnName)\r\n    \r\n    const audio=new Audio(sound)\r\n    audio.volume=volume\r\n    audio.play()\r\n    forceUpdate()\r\n    }\r\n }\r\n\r\n\r\n\r\n})\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n    return ()=>{\r\n        setTimeout(() => {\r\n            setActive(false)\r\n        }, 500);\r\n      \r\n    }\r\n},[active])\r\n\r\n    return (\r\n    <div className= {active?\"DrumButton activeBtn\":\"DrumButton\"} >\r\n      <p>{keyBtn}</p>\r\n    </div>\r\n    )\r\n}\r\nexport default DrumButton","export  const Dbtns=[\r\n    {\r\n    keybtn:'q',\r\n    sound1:'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\r\n    sound2:'',\r\n    volume:1,\r\n    name:'Heater 1'\r\n},\r\n\r\n{\r\n    keybtn:'w',\r\n    sound1:'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\r\n    sound2:'',\r\n    volume:1,\r\n    name:'Heater 2'\r\n},\r\n\r\n\r\n\r\n{\r\n    keybtn:'e',\r\n    sound1:'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\r\n    sound2:'',\r\n    volume:1,\r\n    name:'Heater 3'\r\n},\r\n\r\n\r\n\r\n{\r\n    keybtn:'a',\r\n    sound1:'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',  \r\n    sound2:'',\r\n    volume:1,\r\n    name:'Heater 4'\r\n},\r\n\r\n\r\n\r\n\r\n{\r\n    keybtn:'s',\r\n    sound1:'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\r\n   \r\n    sound2:'',\r\n    volume:1,\r\n    name:'clap'\r\n},\r\n\r\n\r\n\r\n\r\n{\r\n    keybtn:'d',\r\n    sound1:'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\r\n    sound2:'',\r\n    volume:1,\r\n    name:'Open HH'\r\n},\r\n\r\n\r\n\r\n{\r\n    keybtn:'z',\r\n    sound1:'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\r\n    sound2:'',\r\n    volume:1,\r\n    name:'Kick n Hat' \r\n},\r\n\r\n\r\n\r\n{\r\n    keybtn:'x',\r\n    sound1:'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\r\n    sound2:'',\r\n    volume:1,\r\n    name:'Kick'\r\n},\r\n\r\n\r\n\r\n{\r\n    keybtn:'c',\r\n    sound1:'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3', \r\n    sound2:'',\r\n    volume:1,\r\n    name :'Closed HH'\r\n},\r\n\r\n\r\n\r\n]","import React, { useState, useEffect } from 'react'\r\nimport DrumButton from '../DrumButtons/DrumButton'\r\nimport {Dbtns} from '../drumbtnkeys'\r\nimport '../Drums/Drums.scss'\r\n\r\nconst Drums=({currentVolume})=>{\r\n  const[drumBtns,setDrumsBtns]=useState([])\r\n  const [activeBtn,setActiveBtn]=useState(null)\r\n\r\n  \r\nconst forceUpdate=()=>{\r\n    \r\n    setActiveBtn(null)\r\n}\r\n\r\n  useEffect(()=>{\r\n\r\n   \r\n  },[activeBtn])\r\n\r\n  useEffect(()=>{\r\n    console.log('test'+currentVolume)\r\n    setDrumsBtns(Dbtns)\r\n    const handlePress=(e)=>{\r\n       // console.log(e.key)\r\n        setActiveBtn(e.key)\r\n    }\r\n\r\n    \r\n\r\n    window.addEventListener('keydown',handlePress)\r\n\r\n\r\n    \r\n    return ()=>{\r\n        window.removeEventListener('keydown',handlePress)\r\n    }\r\n  },[])\r\n\r\n\r\n \r\n    return (\r\n\r\n      \r\n        <div className=\"drums-btns\">\r\n         \r\n          \r\n            {\r\n               \r\n                drumBtns.map((item,index)=> \r\n                <DrumButton keyBtn={item.keybtn} \r\n                 key={index}\r\n                 activeBtn={activeBtn} \r\n                 sound={item.sound1}\r\n                 forceUpdate={forceUpdate}\r\n                 volume={currentVolume}\r\n                 btnName={item.name}\r\n                 />)\r\n            }\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Drums","\r\nimport React,{useContext} from 'react'\r\nimport '../DrumText/DrumText.scss'\r\nimport DrumContext from '../../../drums-context'\r\nconst DrumText=()=>{\r\n\r\n    const drumData=useContext(DrumContext)\r\n    return (\r\n        <div className=\"drum-text\">\r\n\r\n              <p>{drumData.btnName}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default DrumText","\r\nimport React from 'react'\r\nimport {Form,FormGroup,Label,CustomInput} from 'reactstrap'\r\nimport '../DrumSwitch/DrumSwitch.scss'\r\nconst DrumSwitch=()=>{\r\n\r\n    return (\r\n        <div className=\"drum_switch\">\r\n          \r\n        <FormGroup>\r\n       \r\n       \r\n          <CustomInput type=\"switch\" id=\"exampleCustomSwitch\" name=\"customSwitch\" label=\"Bank\" color=\"danger\" color=\"red\" />\r\n          \r\n        \r\n      </FormGroup>\r\n        </div>\r\n    )\r\n}\r\nexport default DrumSwitch","\r\nimport React from 'react'\r\nimport {Form,FormGroup,Label,CustomInput} from 'reactstrap'\r\nconst DrumVolume =({getVolumeRange})=>{\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n      <FormGroup>\r\n       \r\n        <CustomInput type=\"range\" id=\"exampleCustomRange\" name=\"customRange\" onChange={(e)=>getVolumeRange(e.target.value)}  />\r\n      </FormGroup>\r\n        </div>\r\n    )\r\n}\r\nexport default DrumVolume","import React,{useState, useEffect} from 'react'\r\n\r\nimport Header from '../../Header/Header'\r\nimport SideBar from '../../SideBar/SideBar'\r\nimport Content from '../../Content/Content'\r\nimport NavBar from '../..//NavBar/NavBar'\r\nimport '../Drums/Drums.scss'\r\nimport Drums from '../Drums/Drums'\r\nimport DrumText from '../DrumTools/DrumText/DrumText'\r\nimport DrumSwitch from '../DrumTools/DrumSwitch/DrumSwitch'\r\nimport DrumVolume from '../DrumTools/DrumVolume/DrumVolume'\r\nimport '../../Drums/DrumContainer/DrumContainer.scss'\r\nimport {Row,Col} from 'reactstrap'\r\nimport DrumContext from '../../drums-context'\r\nconst DrumsContainer=()=>{\r\n    const [actorInfo,setActorInfo]=useState({name:'',generes:'',popularity:'',followers:'',img:''})\r\n    const [currentVolume,setCurrentVolume]=useState(1)\r\n\r\n    const getVolumeRange=(val)=>{\r\n        \r\n       \r\n        setCurrentVolume(val/100)\r\n\r\n    }\r\n    const [btnName,setBtnName]=useState('')\r\n    const changeName=(name)=>{\r\n        setBtnName(name)\r\n    }\r\n\r\n\r\n   \r\n    return(\r\n        <div  className=\"DrumsContainer\">\r\n         <Header  isDrums={true}/>\r\n        \r\n         <Content drums={true}>\r\n             <DrumContext.Provider value={{btnName,changeName}}>\r\n\r\n            \r\n             <div className=\"drums-control-container\">\r\n                 <Row>\r\n                     <Col xs={6}>\r\n                     <DrumText/>\r\n                     </Col>\r\n\r\n                     <Col xs={6} className=\"d-flex justify-content-center \">\r\n                     <DrumSwitch/>\r\n                     </Col>\r\n                 </Row>\r\n              <Row >\r\n                  <Col xs={12} className=\"d-flex justify-content-center\">\r\n                  <DrumVolume getVolumeRange={getVolumeRange}/>\r\n                  </Col>\r\n              </Row>\r\n               \r\n              \r\n\r\n             </div>\r\n            <Drums currentVolume={currentVolume} />\r\n            </DrumContext.Provider>\r\n         </Content>\r\n         <SideBar actorInfo={actorInfo}/>\r\n         <NavBar/>\r\n\r\n        \r\n           \r\n        </div>\r\n    )\r\n}\r\nexport default DrumsContainer","import React, { useEffect, useState,useContext } from 'react'\r\nimport  {BrowserRouter,Route,Switch,Link, Redirect} from 'react-router-dom'\r\n\r\nimport {useDispatch} from 'react-redux'\r\nimport Hero from './Hero/Hero'\r\nimport Artists from './Artists/Artists'\r\nimport Albums from './Albums/Albums'\r\n\r\nimport {disactivatingSearch} from '../Redux/Actions/albumsActions'\r\nimport Tracks from './Tracks/Tracks'\r\nimport DrumContainer from './Drums/DrumContainer/DrumContainer'\r\n\r\nconst Auth=()=>{\r\n    \r\n\r\nuseEffect(()=>{\r\n\r\n    \r\n    window.location.assign('https://accounts.spotify.com/en/authorize?client_id=75b27752a2824d73a49e934a0f8e69f4&response_type=token&redirect_uri=http://EngMostafaBassem.github.io/Mozik/Main')\r\n\r\n    \r\n    \r\n    \r\n},[])\r\n\r\n    return (\r\n        <></>\r\n    )\r\n}\r\n\r\nconst Main=()=>{\r\n    const dispatch=useDispatch()\r\n\r\n  \r\n    return(\r\n        <div>\r\n       \r\n      \r\n           <BrowserRouter>\r\n           <Switch>\r\n           \r\n          \r\n          \r\n            <Route path=\"/Artists\" component={()=>{\r\n\r\n          \r\n            dispatch(disactivatingSearch())\r\n                \r\n                return <Artists/>\r\n            }\r\n                \r\n                }/>\r\n            \r\n            <Route path=\"/Auth\" component={Auth}/>\r\n            <Route path=\"/:id/Albums\" component={()=><Albums />}/>\r\n            <Route exact path=\"/Albums\" component={()=><Albums />}/>\r\n            <Route exact path=\"/:id/:id2/Tracks\"  component={()=><Tracks/>}/>\r\n            <Route path=\"/Drums\" component={DrumContainer}/>\r\n            <Route path=\"/Tracks\" component={Tracks}/>\r\n            \r\n            \r\n           \r\n            <Route exact path=\"/Main\" component={Hero}/>    \r\n            <Redirect  to= \"/Auth\" />       \r\n           </Switch>\r\n           </BrowserRouter>\r\n       \r\n        </div>\r\n    )\r\n}\r\nexport default Main","import * as actionTypes from './actionTypes'\r\n\r\nconst fetchToken=(token)=>({\r\n    type:actionTypes.FETCH_TOKEN,\r\n    payload:token\r\n})\r\n\r\nexport default fetchToken","import React,{useEffect,useState} from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport Main from './Components/Main'\nimport {useDispatch} from 'react-redux'\nimport authActions from './Redux/Actions/authActions'\n\nfunction App() {\n\n\n  \n\n\n    \n   \n\nconst dispatch=useDispatch()\n  function parseURLHash () {\n    var search = window.location.hash.substring(1);\n    var urlHash = search?JSON.parse('{\"' + search.replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}',\n                     function(key, value) { return key===\"\"?value:decodeURIComponent(value) }):{}\n    return urlHash;\n}\nvar urlHash = parseURLHash();\nvar accessToken = urlHash.access_token;\n  useEffect(()=>{\n    \n    dispatch(authActions(accessToken))\n\n    \n\n\n},[])\n   \nuseEffect(()=>{\n  \n    setTimeout(() => {\n      \n        window.location.assign('https://accounts.spotify.com/en/authorize?client_id=75b27752a2824d73a49e934a0f8e69f4&response_type=token&redirect_uri=http://localhost:3000/Main')\n\n    }, 3600*60);\n  }\n)\n   \n  return (\n    <div> \n       \n      <Main/>       \n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nimport * as actionTypes from '../Actions/actionTypes'\r\nconst artistReducer=(state={\r\n    artists:[],\r\n    loading:true,\r\n    err:null\r\n},action)=>{\r\n    \r\n    switch(action.type)\r\n    {\r\n\r\n         case actionTypes.ARTISTS_LOADING:\r\n         \r\n            return {...state,loading:true,err:null}\r\n\r\n\r\n         case actionTypes.ARTISTS_ERROR:\r\n             return {...state,loading:false,err:action.payload}\r\n             \r\n             \r\n          case actionTypes.ARTISTS_SHOW:\r\n           \r\n              return {...state,loading:false,artists:action.payload}   \r\n        default:\r\n\r\n\r\n             return state\r\n    }\r\n       \r\n}\r\nexport default artistReducer","import * as actionTypes from '../Actions/actionTypes'\r\nconst authReducer=(state={token:null},action)=>{\r\n\r\n    switch(action.type)\r\n    {\r\n        case actionTypes.FETCH_TOKEN:\r\n          \r\n            return {...state,token:action.payload}\r\n\r\n\r\n        default:\r\n            return state    \r\n    }\r\n\r\n}\r\n\r\nexport default authReducer","import * as actionTypes from '../Actions/actionTypes'\r\n\r\nconst SearchReducer=(state={\r\n        \r\n    isSearching:false,\r\n    searchResult:[],\r\n    savedArtists:[]\r\n    \r\n\r\n\r\n},action)=>{\r\n\r\n    switch(action.type){\r\n\r\n     case actionTypes.SEARCHING:\r\n          return {...state,isSearching:true,searchResult:[],activeSearch:false}\r\n\r\n     case actionTypes.SEARCHING_RESULT:\r\n\r\n     let filterdSearch=[...action.payload]\r\n     const preview_url_Exsist=filterdSearch.some(item=>item.preview_url)\r\n     if(preview_url_Exsist)\r\n        filterdSearch=filterdSearch.filter(item=>item.preview_url!=null)\r\n\r\n          return {...state,isSearching:false,searchResult:filterdSearch,activeSearch:true} \r\n          \r\n      \r\n     case actionTypes.DISACTIVATING_SEARCH:\r\n          return  {...state,isSearching:false,searchResult:[],activeSearch:false}\r\n\r\n\r\n     case actionTypes.SEARCHING_RESULT_ARTIST:\r\n       \r\n         return  {...state,isSearching:false,searchResult:action.payload,savedArtists:action.payload,activeSearch:true}\r\n\r\n        \r\n      default:\r\n          return state    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport default SearchReducer\r\n","import * as actionTypes from '../Actions/actionTypes'\r\nconst albumReducer=(state={\r\n    Albums:[],\r\n    loading:true,\r\n    err:null\r\n},action)=>{\r\n    \r\n    switch(action.type)\r\n    {\r\n\r\n         case actionTypes.ALBUMS_LOADING:\r\n         \r\n            return {...state,loading:true,err:null}\r\n\r\n\r\n         case actionTypes.ALBUMS_ERROR:\r\n             return {...state,loading:false,err:action.payload}\r\n             \r\n             \r\n          case actionTypes.ALBUMS_SHOW:\r\n            \r\n                return {...state,loading:false,Albums:action.payload}   \r\n\r\n\r\n           \r\n        default:\r\n\r\n             return state\r\n    }\r\n       \r\n}\r\nexport default albumReducer","import * as actionTypes from '../Actions/actionTypes'\r\nconst trackReducer=(state={\r\n    Tracks:[],\r\n    loading:true,\r\n    err:null\r\n},action)=>{\r\n    \r\n    switch(action.type)\r\n    {\r\n\r\n         case actionTypes.TRACKS_LOADING:\r\n         \r\n            return {...state,loading:true,err:null}\r\n\r\n\r\n         case actionTypes.TRACKS_ERROR:\r\n             return {...state,loading:false,err:action.payload}\r\n             \r\n             \r\n         case actionTypes.TRACKS_SHOW:\r\n\r\n        \r\n            let filterdTracks=[...action.payload]\r\n            filterdTracks=filterdTracks.filter(item=>item.preview_url!=null)\r\n             \r\n           \r\n              return {...state,loading:false,Tracks:filterdTracks}   \r\n\r\n\r\n           \r\n        default:\r\n\r\n\r\n             return state\r\n    }\r\n       \r\n}\r\nexport default trackReducer","\r\nimport {combineReducers} from 'redux'\r\nimport artistReducer from './artistReducer'\r\nimport authReducer from './authReducer'\r\nimport SearchReducer from './SearchReducer'\r\nimport albumReducer from './albumReducer'\r\nimport trackReducer from './tracksReducer'\r\nconst rootReducer=combineReducers({\r\n    authReducer,\r\n    artistReducer, \r\n    SearchReducer,\r\n    albumReducer,\r\n    trackReducer\r\n    \r\n\r\n\r\n})\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware} from 'redux'\nimport rootReducer from './Redux/Reducers/rootReducer'\nimport thunk  from 'redux-thunk'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={createStore(rootReducer,applyMiddleware(thunk))}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}